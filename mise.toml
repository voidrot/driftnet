[tools]
python = "3.13"

[env]
_.file = '.env'
_.path = ['.venv/bin']

COMPOSE_FILE = 'compose.yaml'

[tasks.compose-up]
description = "Start docker compose base services"
run = 'docker compose up -d --remove-orphans'

[tasks.compose-down]
description = "Stop docker compose base services"
run = 'docker compose down'

[tasks.migrate]
description = "Run Django migrations"
run = "uv run python manage.py migrate"

[tasks.make-migrations]
description = "Create new Django migrations"
run = "uv run python manage.py makemigrations"

[tasks.dev]
description = "Run the Django development server"
depends = ['compose-up']
run = "uv run ./manage.py tailwind runserver --force-default-runserver"

[tasks.format]
description = "Format code with ruff and djlint"
quiet = true
run = [
  'uv run ruff check --fix --unsafe-fixes || true',
  'uv run ruff format || true',
  'uv run djlint . --reformat || true'
]

[tasks.celery-beat]
description = "Run the Celery beat scheduler"
run = "uv run watchmedo auto-restart --directory=./apps --directory=./config --pattern=*.py --recursive -- celery -A config.celery_app beat -l INFO"

[tasks.celery-worker]
description = "Run the Celery worker"
run = "uv run watchmedo auto-restart --directory=./apps --directory=./config --pattern=*.py --recursive -- celery -A config.celery_app worker -l INFO"

[tasks.celery-flower]
description = "Run the Celery Flower monitoring tool"
run = "uv run watchmedo auto-restart --directory=./apps --directory=./config --pattern=*.py --recursive -- celery -A config.celery_app flower --port=5555"
