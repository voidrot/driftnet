from pathlib import Path


def collect_files(collection_dir: Path):
    """
    Recursively collect all .json files in the given directory.

    Args:
        collection_dir (Path): The root directory to search for JSON files.

    Returns:
        list[Path]: List of Path objects for each .json file found.
    """
    return [
        entry
        for entry in collection_dir.rglob('**')
        if entry.is_file() and entry.suffix in ['.json']
    ]


# Define rules for adding indexes to models based on field names
# Update as needed for new queries
MODEL_INDEX_RULES = {
    'inv_positions': ["models.Index(fields=['item_id'])"],
}

# Define primary key ID overrides for models
MODEL_PRIMARY_KEY_ID_OVERRIDE = {
    'inv_items': 'item_id',
    'inv_flags': 'flag_id',
    'inv_names': 'item_id',
    'inv_positions': 'item_id',
    'inv_unique_names': 'item_id',
    'sta_stations': 'station_id',
    'stars': 'id',
    'regions': 'region_id',
    'constellations': 'constellation_id',
    'solar_systems': 'solar_system_id',
    'tournament_rule_sets': 'rule_set_id',
}

MODEL_TEMPLATE = """
{% autoescape off %}
# Automatically generated by sde_gen_models management command
# Last Generate: {% now "F j, Y" %}

from django.db import models


class {{model_name}}(models.Model):
    {% for field_name, field_type in fields.items %}
    {{ field_name }} = {{ field_type }}{% endfor %}

    {% if indexes %}class Meta:
        indexes = [
            {% for index in indexes %}{{ index }},{% endfor %}
        ]
    {% endif %}
{% endautoescape %}

"""

INIT_MODEL_TEMPLATE = """
{% autoescape off %}
# Automatically generated by sde_gen_models management command
# Last Generate: {% now "F j, Y" %}

{% for model_file in imports %}
{{ model_file }}
{% endfor %}

__all__ = [
    {% for model in models %}'{{ model }}',{% endfor %}
]
{% endautoescape %}

"""

UNIVERSE_LOOKUP_TEMPLATE = """
{% autoescape off %}
# Automatically generated by sde_gen_models management command
# Last Generate: {% now "F j, Y" %}

from django.db import models

class UniverseLookup(models.Model):
    region_id = models.IntegerField()
    constellation_id = models.IntegerField()
    solar_system_id = models.IntegerField()
    planet_id = models.IntegerField(null=True)
    moons = models.JSONField(default=list, null=True)
    asteroid_belts = models.JSONField(default=list, null=True)

    class Meta:
        unique_together = [
            'region_id',
            'constellation_id',
            'solar_system_id',
            'planet_id',
        ]
        indexes = [
            models.Index(fields=['region_id']),
            models.Index(fields=['constellation_id']),
            models.Index(fields=['solar_system_id']),
            models.Index(fields=['planet_id']),
            models.Index(fields=['moons']),
            models.Index(fields=['asteroid_belts']),
        ]
{% endautoescape %}
"""
