# Define rules for adding indexes to models based on field names
# Update as needed for new queries
MODEL_INDEX_RULES = {
    # 'inv_positions': ["models.Index(fields=['item_id'])"],
    # 'types': [
    #     "models.Index(fields=['market_group_id'])",
    #     "models.Index(fields=['group_id'])",
    # ],
    # 'regions': [
    #     "models.Index(fields=['name_id'])",
    # ],
}

DO_NOT_CONVERT_TO_SINGULAR = []

IGNORED_FILES = ['_sde.jsonl', 'translationLanguages.jsonl', 'masteries.jsonl']

DO_NOT_CONVERT_TO_CAMEL_FILES = ['sovereigntyUpgrades.jsonl']

IGNORED_CONVERT_TO_SINGULAR = [
    'typeBonus.jsonl',
    'typeDogma.jsonl',
    'agentsInSpace.jsonl',
    'types.jsonl',
]

MODEL_TEMPLATE = """
{% autoescape off %}
# Automatically generated by sde_gen_models management command
# Last Generate: {% now "F j, Y" %}

from django.db import models
{% for extra_import in imports %}
{{ extra_import }}
{% endfor %}


class {{model_name}}(models.Model):
    {% for column in fields %}{{ column.name }} = {{ column.type }}
    {% endfor %}

    class Meta:
        verbose_name = "{{ verbose_name }}"
        verbose_name_plural = "{{ verbose_name_plural }}"
    {% if indexes %}
        indexes = [
            {% for index in indexes %}{{ index }},{% endfor %}
        ]
    {% endif %}

    def __str__(self):
        return f'{{ model_name }}: {% verbatim %}{self.id}{% endverbatim %}'
{% endautoescape %}

"""

INIT_MODEL_TEMPLATE = """
{% autoescape off %}
# Automatically generated by sde_gen_models management command
# Last Generate: {% now "F j, Y" %}

{% for model_file in imports %}
{{ model_file }}
{% endfor %}

__all__ = [
    {% for model in models %}'{{ model }}',{% endfor %}
]
{% endautoescape %}

"""

UNIVERSE_LOOKUP_TEMPLATE = """
{% autoescape off %}
# Automatically generated by sde_gen_models management command
# Last Generate: {% now "F j, Y" %}

from django.db import models

class UniverseLookup(models.Model):
    region_id = models.IntegerField()
    constellation_id = models.IntegerField()
    solar_system_id = models.IntegerField()
    planet_id = models.IntegerField(null=True)
    moons = models.JSONField(default=list, null=True)
    asteroid_belts = models.JSONField(default=list, null=True)

    class Meta:
        unique_together = [
            'region_id',
            'constellation_id',
            'solar_system_id',
            'planet_id',
        ]
        indexes = [
            models.Index(fields=['region_id']),
            models.Index(fields=['constellation_id']),
            models.Index(fields=['solar_system_id']),
            models.Index(fields=['planet_id']),
            models.Index(fields=['moons']),
            models.Index(fields=['asteroid_belts']),
        ]
{% endautoescape %}
"""
