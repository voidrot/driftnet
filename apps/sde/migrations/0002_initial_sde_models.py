# Generated by Django 5.2.6 on 2025-10-04 05:48

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sde', '0001_schema_changelog'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentsInSpace',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('dungeon_id', models.IntegerField()),
                ('solar_system_id', models.IntegerField()),
                ('spawn_point_id', models.IntegerField()),
                ('type_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Agents In Space',
                'verbose_name_plural': 'Agents In Spaces',
            },
        ),
        migrations.CreateModel(
            name='AgentType',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'verbose_name': 'Agent Type',
                'verbose_name_plural': 'Agent Types',
            },
        ),
        migrations.CreateModel(
            name='Ancestry',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('bloodline_id', models.IntegerField()),
                ('charisma', models.IntegerField()),
                ('description', models.JSONField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('intelligence', models.IntegerField()),
                ('memory', models.IntegerField()),
                ('name', models.JSONField()),
                ('perception', models.IntegerField()),
                ('short_description', models.TextField(default=None, null=True)),
                ('willpower', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Ancestry',
                'verbose_name_plural': 'Ancestrys',
            },
        ),
        migrations.CreateModel(
            name='Bloodline',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('charisma', models.IntegerField()),
                ('corporation_id', models.IntegerField()),
                ('description', models.JSONField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('intelligence', models.IntegerField()),
                ('memory', models.IntegerField()),
                ('name', models.JSONField()),
                ('perception', models.IntegerField()),
                ('race_id', models.IntegerField()),
                ('willpower', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Bloodline',
                'verbose_name_plural': 'Bloodlines',
            },
        ),
        migrations.CreateModel(
            name='Blueprint',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('activities', models.JSONField()),
                ('blueprint_type_id', models.IntegerField()),
                ('max_production_limit', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Blueprint',
                'verbose_name_plural': 'Blueprints',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.JSONField()),
                ('published', models.BooleanField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categorys',
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('description', models.JSONField()),
                ('group_id', models.IntegerField()),
                ('name', models.JSONField()),
                ('recommended_for', models.JSONField(default=list, null=True)),
                ('skill_types', models.JSONField()),
            ],
            options={
                'verbose_name': 'Certificate',
                'verbose_name_plural': 'Certificates',
            },
        ),
        migrations.CreateModel(
            name='CharacterAttribute',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('icon_id', models.IntegerField()),
                ('name', models.JSONField()),
                ('notes', models.TextField()),
                ('short_description', models.TextField()),
            ],
            options={
                'verbose_name': 'Character Attribute',
                'verbose_name_plural': 'Character Attributes',
            },
        ),
        migrations.CreateModel(
            name='ContrabandType',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('factions', models.JSONField()),
            ],
            options={
                'verbose_name': 'Contraband Type',
                'verbose_name_plural': 'Contraband Types',
            },
        ),
        migrations.CreateModel(
            name='ControlTowerResource',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('resources', models.JSONField()),
            ],
            options={
                'verbose_name': 'Control Tower Resource',
                'verbose_name_plural': 'Control Tower Resources',
            },
        ),
        migrations.CreateModel(
            name='CorporationActivity',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.JSONField()),
            ],
            options={
                'verbose_name': 'Corporation Activity',
                'verbose_name_plural': 'Corporation Activitys',
            },
        ),
        migrations.CreateModel(
            name='DbuffCollection',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('aggregate_mode', models.TextField()),
                ('developer_description', models.TextField()),
                ('item_modifiers', models.JSONField(default=list, null=True)),
                ('location_group_modifiers', models.JSONField(default=list, null=True)),
                ('location_modifiers', models.JSONField(default=list, null=True)),
                ('location_required_skill_modifiers', models.JSONField(default=list, null=True)),
                ('operation_name', models.TextField()),
                ('show_output_value_in_ui', models.TextField()),
                ('display_name', models.JSONField(default=dict, null=True)),
            ],
            options={
                'verbose_name': 'Dbuff Collection',
                'verbose_name_plural': 'Dbuff Collections',
            },
        ),
        migrations.CreateModel(
            name='DogmaAttribute',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('attribute_category_id', models.IntegerField(default=None, null=True)),
                ('data_type', models.IntegerField()),
                ('default_value', models.DecimalField(decimal_places=30, max_digits=50)),
                ('description', models.TextField(default=None, null=True)),
                ('display_when_zero', models.BooleanField()),
                ('high_is_good', models.BooleanField()),
                ('name', models.TextField()),
                ('published', models.BooleanField()),
                ('stackable', models.BooleanField()),
                ('display_name', models.JSONField(default=dict, null=True)),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('tooltip_description', models.JSONField(default=dict, null=True)),
                ('tooltip_title', models.JSONField(default=dict, null=True)),
                ('unit_id', models.IntegerField(default=None, null=True)),
                ('charge_recharge_time_id', models.IntegerField(default=None, null=True)),
                ('max_attribute_id', models.IntegerField(default=None, null=True)),
                ('min_attribute_id', models.IntegerField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Dogma Attribute',
                'verbose_name_plural': 'Dogma Attributes',
            },
        ),
        migrations.CreateModel(
            name='DogmaAttributeCategory',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('description', models.TextField(default=None, null=True)),
                ('name', models.TextField()),
            ],
            options={
                'verbose_name': 'Dogma Attribute Category',
                'verbose_name_plural': 'Dogma Attribute Categorys',
            },
        ),
        migrations.CreateModel(
            name='DogmaEffect',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('disallow_auto_repeat', models.BooleanField()),
                ('discharge_attribute_id', models.IntegerField(default=None, null=True)),
                ('duration_attribute_id', models.IntegerField(default=None, null=True)),
                ('effect_category_id', models.IntegerField()),
                ('electronic_chance', models.BooleanField()),
                ('guid', models.TextField(default=None, null=True)),
                ('is_assistance', models.BooleanField()),
                ('is_offensive', models.BooleanField()),
                ('is_warp_safe', models.BooleanField()),
                ('name', models.TextField()),
                ('propulsion_chance', models.BooleanField()),
                ('published', models.BooleanField()),
                ('range_chance', models.BooleanField()),
                ('distribution', models.IntegerField(default=None, null=True)),
                ('falloff_attribute_id', models.IntegerField(default=None, null=True)),
                ('range_attribute_id', models.IntegerField(default=None, null=True)),
                ('tracking_speed_attribute_id', models.IntegerField(default=None, null=True)),
                ('description', models.JSONField(default=dict, null=True)),
                ('display_name', models.JSONField(default=dict, null=True)),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('modifier_info', models.JSONField(default=list, null=True)),
                ('npc_usage_chance_attribute_id', models.IntegerField(default=None, null=True)),
                ('npc_activation_chance_attribute_id', models.IntegerField(default=None, null=True)),
                ('fitting_usage_chance_attribute_id', models.IntegerField(default=None, null=True)),
                ('resistance_attribute_id', models.IntegerField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Dogma Effect',
                'verbose_name_plural': 'Dogma Effects',
            },
        ),
        migrations.CreateModel(
            name='DogmaUnit',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('description', models.JSONField(default=dict, null=True)),
                ('display_name', models.JSONField(default=dict, null=True)),
                ('name', models.TextField()),
            ],
            options={
                'verbose_name': 'Dogma Unit',
                'verbose_name_plural': 'Dogma Units',
            },
        ),
        migrations.CreateModel(
            name='DynamicItemAttribute',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('attribute_ids', models.JSONField()),
                ('input_output_mapping', models.JSONField()),
            ],
            options={
                'verbose_name': 'Dynamic Item Attribute',
                'verbose_name_plural': 'Dynamic Item Attributes',
            },
        ),
        migrations.CreateModel(
            name='Faction',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('corporation_id', models.IntegerField(default=None, null=True)),
                ('description', models.JSONField()),
                ('flat_logo', models.TextField(default=None, null=True)),
                ('flat_logo_with_name', models.TextField(default=None, null=True)),
                ('icon_id', models.IntegerField()),
                ('member_races', models.JSONField()),
                ('militia_corporation_id', models.IntegerField(default=None, null=True)),
                ('name', models.JSONField()),
                ('short_description', models.JSONField(default=dict, null=True)),
                ('size_factor', models.DecimalField(decimal_places=30, max_digits=50)),
                ('solar_system_id', models.IntegerField()),
                ('unique_name', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Faction',
                'verbose_name_plural': 'Factions',
            },
        ),
        migrations.CreateModel(
            name='Graphic',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('graphic_file', models.TextField(default=None, null=True)),
                ('icon_folder', models.TextField(default=None, null=True)),
                ('sof_faction_name', models.TextField(default=None, null=True)),
                ('sof_hull_name', models.TextField(default=None, null=True)),
                ('sof_race_name', models.TextField(default=None, null=True)),
                ('sof_material_set_id', models.IntegerField(default=None, null=True)),
                ('sof_layout', models.JSONField(default=list, null=True)),
            ],
            options={
                'verbose_name': 'Graphic',
                'verbose_name_plural': 'Graphics',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('anchorable', models.BooleanField()),
                ('anchored', models.BooleanField()),
                ('category_id', models.IntegerField()),
                ('fittable_non_singleton', models.BooleanField()),
                ('name', models.JSONField()),
                ('published', models.BooleanField()),
                ('use_base_price', models.BooleanField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='Icon',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('icon_file', models.TextField()),
            ],
            options={
                'verbose_name': 'Icon',
                'verbose_name_plural': 'Icons',
            },
        ),
        migrations.CreateModel(
            name='Landmark',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('description', models.JSONField()),
                ('name', models.JSONField()),
                ('position', models.JSONField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('location_id', models.IntegerField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Landmark',
                'verbose_name_plural': 'Landmarks',
            },
        ),
        migrations.CreateModel(
            name='MapAsteroidBelt',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('celestial_index', models.IntegerField()),
                ('orbit_id', models.IntegerField()),
                ('orbit_index', models.IntegerField()),
                ('position', models.JSONField()),
                ('radius', models.DecimalField(decimal_places=30, default=None, max_digits=50, null=True)),
                ('solar_system_id', models.IntegerField()),
                ('statistics', models.JSONField(default=dict, null=True)),
                ('type_id', models.IntegerField()),
                ('unique_name', models.JSONField(default=dict, null=True)),
            ],
            options={
                'verbose_name': 'Map Asteroid Belt',
                'verbose_name_plural': 'Map Asteroid Belts',
            },
        ),
        migrations.CreateModel(
            name='MapConstellation',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('faction_id', models.IntegerField(default=None, null=True)),
                ('name', models.JSONField()),
                ('position', models.JSONField()),
                ('region_id', models.IntegerField()),
                ('solar_system_ids', models.JSONField()),
                ('wormhole_class_id', models.IntegerField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Map Constellation',
                'verbose_name_plural': 'Map Constellations',
            },
        ),
        migrations.CreateModel(
            name='MapMoon',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('attributes', models.JSONField()),
                ('celestial_index', models.IntegerField()),
                ('orbit_id', models.IntegerField()),
                ('orbit_index', models.IntegerField()),
                ('position', models.JSONField()),
                ('radius', models.DecimalField(decimal_places=30, max_digits=50)),
                ('solar_system_id', models.IntegerField()),
                ('statistics', models.JSONField(default=dict, null=True)),
                ('type_id', models.IntegerField()),
                ('npc_station_ids', models.JSONField(default=list, null=True)),
                ('unique_name', models.JSONField(default=dict, null=True)),
            ],
            options={
                'verbose_name': 'Map Moon',
                'verbose_name_plural': 'Map Moons',
            },
        ),
        migrations.CreateModel(
            name='MapPlanet',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('asteroid_belt_ids', models.JSONField(default=list, null=True)),
                ('attributes', models.JSONField()),
                ('celestial_index', models.IntegerField()),
                ('moon_ids', models.JSONField(default=list, null=True)),
                ('orbit_id', models.IntegerField()),
                ('position', models.JSONField()),
                ('radius', models.IntegerField()),
                ('solar_system_id', models.IntegerField()),
                ('statistics', models.JSONField()),
                ('type_id', models.IntegerField()),
                ('npc_station_ids', models.JSONField(default=list, null=True)),
                ('unique_name', models.JSONField(default=dict, null=True)),
            ],
            options={
                'verbose_name': 'Map Planet',
                'verbose_name_plural': 'Map Planets',
            },
        ),
        migrations.CreateModel(
            name='MapRegion',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('constellation_ids', models.JSONField()),
                ('description', models.JSONField(default=dict, null=True)),
                ('faction_id', models.IntegerField(default=None, null=True)),
                ('name', models.JSONField()),
                ('nebula_id', models.IntegerField()),
                ('position', models.JSONField()),
                ('wormhole_class_id', models.IntegerField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Map Region',
                'verbose_name_plural': 'Map Regions',
            },
        ),
        migrations.CreateModel(
            name='MapSolarSystem',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('border', models.BooleanField(default=False, null=True)),
                ('constellation_id', models.IntegerField()),
                ('hub', models.BooleanField(default=False, null=True)),
                ('international', models.BooleanField(default=False, null=True)),
                ('luminosity', models.DecimalField(decimal_places=30, default=None, max_digits=50, null=True)),
                ('name', models.JSONField()),
                ('planet_ids', models.JSONField(default=list, null=True)),
                ('position', models.JSONField()),
                ('radius', models.DecimalField(decimal_places=30, max_digits=50)),
                ('region_id', models.IntegerField()),
                ('regional', models.BooleanField(default=False, null=True)),
                ('security_class', models.TextField(default=None, null=True)),
                ('security_status', models.DecimalField(decimal_places=30, max_digits=50)),
                ('star_id', models.IntegerField(default=None, null=True)),
                ('stargate_ids', models.JSONField(default=list, null=True)),
                ('corridor', models.BooleanField(default=False, null=True)),
                ('fringe', models.BooleanField(default=False, null=True)),
                ('wormhole_class_id', models.IntegerField(default=None, null=True)),
                ('visual_effect', models.TextField(default=None, null=True)),
                ('disallowed_anchor_categories', models.JSONField(default=list, null=True)),
                ('disallowed_anchor_groups', models.JSONField(default=list, null=True)),
                ('faction_id', models.IntegerField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Map Solar System',
                'verbose_name_plural': 'Map Solar Systems',
            },
        ),
        migrations.CreateModel(
            name='MapStar',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('radius', models.BigIntegerField()),
                ('solar_system_id', models.IntegerField()),
                ('statistics', models.JSONField()),
                ('type_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Map Star',
                'verbose_name_plural': 'Map Stars',
            },
        ),
        migrations.CreateModel(
            name='MapStargate',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('destination', models.JSONField()),
                ('position', models.JSONField()),
                ('solar_system_id', models.IntegerField()),
                ('type_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Map Stargate',
                'verbose_name_plural': 'Map Stargates',
            },
        ),
        migrations.CreateModel(
            name='MarketGroup',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('description', models.JSONField(default=dict, null=True)),
                ('has_types', models.BooleanField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('name', models.JSONField()),
                ('parent_group_id', models.IntegerField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Market Group',
                'verbose_name_plural': 'Market Groups',
            },
        ),
        migrations.CreateModel(
            name='MetaGroup',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('color', models.JSONField(default=dict, null=True)),
                ('name', models.JSONField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('icon_suffix', models.TextField(default=None, null=True)),
                ('description', models.JSONField(default=dict, null=True)),
            ],
            options={
                'verbose_name': 'Meta Group',
                'verbose_name_plural': 'Meta Groups',
            },
        ),
        migrations.CreateModel(
            name='NpcCharacter',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('bloodline_id', models.IntegerField()),
                ('ceo', models.BooleanField()),
                ('corporation_id', models.IntegerField()),
                ('gender', models.BooleanField()),
                ('location_id', models.IntegerField(default=None, null=True)),
                ('name', models.JSONField()),
                ('race_id', models.IntegerField()),
                ('start_date', models.TextField(default=None, null=True)),
                ('unique_name', models.BooleanField()),
                ('skills', models.JSONField(default=list, null=True)),
                ('ancestry_id', models.IntegerField(default=None, null=True)),
                ('career_id', models.IntegerField(default=None, null=True)),
                ('school_id', models.IntegerField(default=None, null=True)),
                ('speciality_id', models.IntegerField(default=None, null=True)),
                ('agent', models.JSONField(default=dict, null=True)),
                ('description', models.TextField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Npc Character',
                'verbose_name_plural': 'Npc Characters',
            },
        ),
        migrations.CreateModel(
            name='NpcCorporation',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('ceo_id', models.IntegerField(default=None, null=True)),
                ('deleted', models.BooleanField()),
                ('description', models.JSONField(default=dict, null=True)),
                ('extent', models.TextField()),
                ('has_player_personnel_manager', models.BooleanField()),
                ('initial_price', models.IntegerField()),
                ('member_limit', models.IntegerField()),
                ('min_security', models.DecimalField(decimal_places=30, max_digits=50)),
                ('minimum_join_standing', models.IntegerField()),
                ('name', models.JSONField()),
                ('send_char_termination_message', models.BooleanField()),
                ('shares', models.BigIntegerField()),
                ('size', models.TextField()),
                ('station_id', models.IntegerField(default=None, null=True)),
                ('tax_rate', models.DecimalField(decimal_places=30, max_digits=50)),
                ('ticker_name', models.TextField()),
                ('unique_name', models.BooleanField()),
                ('allowed_member_races', models.JSONField(default=list, null=True)),
                ('corporation_trades', models.JSONField(default=list, null=True)),
                ('divisions', models.JSONField(default=list, null=True)),
                ('enemy_id', models.IntegerField(default=None, null=True)),
                ('faction_id', models.IntegerField(default=None, null=True)),
                ('friend_id', models.IntegerField(default=None, null=True)),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('investors', models.JSONField(default=list, null=True)),
                ('lp_offer_tables', models.JSONField(default=list, null=True)),
                ('main_activity_id', models.IntegerField(default=None, null=True)),
                ('race_id', models.IntegerField(default=None, null=True)),
                ('size_factor', models.DecimalField(decimal_places=30, default=None, max_digits=50, null=True)),
                ('solar_system_id', models.IntegerField(default=None, null=True)),
                ('secondary_activity_id', models.IntegerField(default=None, null=True)),
                ('exchange_rates', models.JSONField(default=list, null=True)),
            ],
            options={
                'verbose_name': 'Npc Corporation',
                'verbose_name_plural': 'Npc Corporations',
            },
        ),
        migrations.CreateModel(
            name='NpcCorporationDivision',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('display_name', models.TextField(default=None, null=True)),
                ('internal_name', models.TextField()),
                ('leader_type_name', models.JSONField()),
                ('name', models.JSONField()),
                ('description', models.JSONField(default=dict, null=True)),
            ],
            options={
                'verbose_name': 'Npc Corporation Division',
                'verbose_name_plural': 'Npc Corporation Divisions',
            },
        ),
        migrations.CreateModel(
            name='NpcStation',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('celestial_index', models.IntegerField(default=None, null=True)),
                ('operation_id', models.IntegerField()),
                ('orbit_id', models.IntegerField()),
                ('orbit_index', models.IntegerField(default=None, null=True)),
                ('owner_id', models.IntegerField()),
                ('position', models.JSONField()),
                ('reprocessing_efficiency', models.DecimalField(decimal_places=30, max_digits=50)),
                ('reprocessing_hangar_flag', models.IntegerField()),
                ('reprocessing_stations_take', models.DecimalField(decimal_places=30, max_digits=50)),
                ('solar_system_id', models.IntegerField()),
                ('type_id', models.IntegerField()),
                ('use_operation_name', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Npc Station',
                'verbose_name_plural': 'Npc Stations',
            },
        ),
        migrations.CreateModel(
            name='PlanetResource',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('power', models.IntegerField(default=None, null=True)),
                ('workforce', models.IntegerField(default=None, null=True)),
                ('cycle_minutes', models.IntegerField(default=None, null=True)),
                ('harvest_silo_max', models.IntegerField(default=None, null=True)),
                ('maturation_cycle_minutes', models.IntegerField(default=None, null=True)),
                ('maturation_percent', models.IntegerField(default=None, null=True)),
                ('mature_silo_max', models.IntegerField(default=None, null=True)),
                ('reagent_harvest_amount', models.IntegerField(default=None, null=True)),
                ('reagent_type_id', models.IntegerField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Planet Resource',
                'verbose_name_plural': 'Planet Resources',
            },
        ),
        migrations.CreateModel(
            name='PlanetSchematic',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('cycle_time', models.IntegerField()),
                ('name', models.JSONField()),
                ('pins', models.JSONField()),
                ('types', models.JSONField()),
            ],
            options={
                'verbose_name': 'Planet Schematic',
                'verbose_name_plural': 'Planet Schematics',
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('description', models.JSONField(default=dict, null=True)),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('name', models.JSONField()),
                ('ship_type_id', models.IntegerField(default=None, null=True)),
                ('skills', models.JSONField(default=list, null=True)),
            ],
            options={
                'verbose_name': 'Race',
                'verbose_name_plural': 'Races',
            },
        ),
        migrations.CreateModel(
            name='Skin',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('allow_ccpdevs', models.BooleanField()),
                ('internal_name', models.TextField()),
                ('skin_material_id', models.IntegerField()),
                ('types', models.JSONField()),
                ('visible_serenity', models.BooleanField()),
                ('visible_tranquility', models.BooleanField()),
                ('is_structure_skin', models.BooleanField(default=False, null=True)),
                ('skin_description', models.JSONField(default=dict, null=True)),
            ],
            options={
                'verbose_name': 'Skin',
                'verbose_name_plural': 'Skins',
            },
        ),
        migrations.CreateModel(
            name='SkinLicense',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('duration', models.IntegerField()),
                ('license_type_id', models.IntegerField()),
                ('skin_id', models.IntegerField()),
                ('is_single_use', models.BooleanField(default=False, null=True)),
            ],
            options={
                'verbose_name': 'Skin License',
                'verbose_name_plural': 'Skin Licenses',
            },
        ),
        migrations.CreateModel(
            name='SkinMaterial',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('display_name', models.JSONField(default=dict, null=True)),
                ('material_set_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Skin Material',
                'verbose_name_plural': 'Skin Materials',
            },
        ),
        migrations.CreateModel(
            name='SovereigntyUpgrade',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('fuel_hourly_upkeep', models.IntegerField(default=None, null=True)),
                ('fuel_startup_cost', models.IntegerField(default=None, null=True)),
                ('fuel_type_id', models.IntegerField(default=None, null=True)),
                ('mutually_exclusive_group', models.TextField()),
                ('power_allocation', models.IntegerField()),
                ('workforce_allocation', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Sovereignty Upgrade',
                'verbose_name_plural': 'Sovereignty Upgrades',
            },
        ),
        migrations.CreateModel(
            name='StationOperation',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('activity_id', models.IntegerField()),
                ('border', models.DecimalField(decimal_places=30, max_digits=50)),
                ('corridor', models.DecimalField(decimal_places=30, max_digits=50)),
                ('description', models.JSONField(default=dict, null=True)),
                ('fringe', models.DecimalField(decimal_places=30, max_digits=50)),
                ('hub', models.DecimalField(decimal_places=30, max_digits=50)),
                ('manufacturing_factor', models.DecimalField(decimal_places=30, max_digits=50)),
                ('operation_name', models.JSONField()),
                ('ratio', models.DecimalField(decimal_places=30, max_digits=50)),
                ('research_factor', models.DecimalField(decimal_places=30, max_digits=50)),
                ('services', models.JSONField()),
                ('station_types', models.JSONField(default=list, null=True)),
            ],
            options={
                'verbose_name': 'Station Operation',
                'verbose_name_plural': 'Station Operations',
            },
        ),
        migrations.CreateModel(
            name='StationService',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('service_name', models.JSONField()),
                ('description', models.JSONField(default=dict, null=True)),
            ],
            options={
                'verbose_name': 'Station Service',
                'verbose_name_plural': 'Station Services',
            },
        ),
        migrations.CreateModel(
            name='TypeBonus',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('role_bonuses', models.JSONField(default=list, null=True)),
                ('types', models.JSONField(default=list, null=True)),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('misc_bonuses', models.JSONField(default=list, null=True)),
            ],
            options={
                'verbose_name': 'Type Bonus',
                'verbose_name_plural': 'Type Bonuses',
            },
        ),
        migrations.CreateModel(
            name='TypeDogma',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('dogma_attributes', models.JSONField()),
                ('dogma_effects', models.JSONField(default=list, null=True)),
            ],
            options={
                'verbose_name': 'Type Dogma',
                'verbose_name_plural': 'Type Dogmas',
            },
        ),
        migrations.CreateModel(
            name='TypeMaterial',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('materials', models.JSONField()),
            ],
            options={
                'verbose_name': 'Type Material',
                'verbose_name_plural': 'Type Materials',
            },
        ),
        migrations.CreateModel(
            name='Types',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField()),
                ('mass', models.DecimalField(decimal_places=30, default=None, max_digits=50, null=True)),
                ('name', models.JSONField()),
                ('portion_size', models.IntegerField()),
                ('published', models.BooleanField()),
                ('volume', models.DecimalField(decimal_places=30, default=None, max_digits=50, null=True)),
                ('radius', models.DecimalField(decimal_places=30, default=None, max_digits=50, null=True)),
                ('description', models.JSONField(default=dict, null=True)),
                ('graphic_id', models.IntegerField(default=None, null=True)),
                ('sound_id', models.IntegerField(default=None, null=True)),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('race_id', models.IntegerField(default=None, null=True)),
                ('base_price', models.DecimalField(decimal_places=30, default=None, max_digits=50, null=True)),
                ('market_group_id', models.IntegerField(default=None, null=True)),
                ('capacity', models.DecimalField(decimal_places=30, default=None, max_digits=50, null=True)),
                ('meta_group_id', models.IntegerField(default=None, null=True)),
                ('variation_parent_type_id', models.IntegerField(default=None, null=True)),
                ('faction_id', models.IntegerField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Types',
                'verbose_name_plural': 'Typeses',
            },
        ),
    ]
