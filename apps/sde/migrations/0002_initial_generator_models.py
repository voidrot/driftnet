# Generated by Django 5.2.6 on 2025-09-08 08:10

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sde', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_type_id', models.IntegerField()),
                ('corporation_id', models.IntegerField()),
                ('division_id', models.IntegerField()),
                ('is_locator', models.BooleanField()),
                ('level', models.IntegerField()),
                ('location_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='AgentsInSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dungeon_id', models.IntegerField()),
                ('solar_system_id', models.IntegerField()),
                ('spawn_point_id', models.IntegerField()),
                ('type_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ancestry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bloodline_id', models.IntegerField()),
                ('charisma', models.IntegerField()),
                ('description_id', models.JSONField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('intelligence', models.IntegerField()),
                ('memory', models.IntegerField()),
                ('name_id', models.JSONField()),
                ('perception', models.IntegerField()),
                ('short_description', models.TextField(default=None, null=True)),
                ('willpower', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='AsteroidBelt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.JSONField()),
                ('statistics', models.JSONField(default=dict, null=True)),
                ('type_id', models.IntegerField()),
                ('asteroid_belt_name_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bloodline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charisma', models.IntegerField()),
                ('corporation_id', models.IntegerField()),
                ('description_id', models.JSONField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('intelligence', models.IntegerField()),
                ('memory', models.IntegerField()),
                ('name_id', models.JSONField()),
                ('perception', models.IntegerField()),
                ('race_id', models.IntegerField()),
                ('willpower', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Blueprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activities', models.JSONField()),
                ('blueprint_type_id', models.IntegerField()),
                ('max_production_limit', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.JSONField()),
                ('published', models.BooleanField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('group_id', models.IntegerField()),
                ('name', models.TextField()),
                ('recommended_for', models.JSONField(default=list, null=True)),
                ('skill_types', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='CharacterAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('icon_id', models.IntegerField()),
                ('name_id', models.JSONField()),
                ('notes', models.TextField()),
                ('short_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Constellation',
            fields=[
                ('center', models.JSONField()),
                ('constellation_id', models.IntegerField(primary_key=True, serialize=False)),
                ('max', models.JSONField()),
                ('min', models.JSONField()),
                ('name_id', models.IntegerField()),
                ('radius', models.FloatField()),
                ('faction_id', models.IntegerField(default=None, null=True)),
                ('wormhole_class_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContrabandType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factions', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='ControlTowerResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resources', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='CorporationActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_id', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='DogmaAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_id', models.IntegerField()),
                ('category_id', models.IntegerField(default=None, null=True)),
                ('data_type', models.IntegerField()),
                ('default_value', models.FloatField()),
                ('description', models.TextField(default=None, null=True)),
                ('high_is_good', models.BooleanField()),
                ('name', models.TextField()),
                ('published', models.BooleanField()),
                ('stackable', models.BooleanField()),
                ('display_name_id', models.JSONField(default=dict, null=True)),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('tooltip_description_id', models.JSONField(default=dict, null=True)),
                ('tooltip_title_id', models.JSONField(default=dict, null=True)),
                ('unit_id', models.IntegerField(default=None, null=True)),
                ('charge_recharge_time_id', models.IntegerField(default=None, null=True)),
                ('max_attribute_id', models.IntegerField(default=None, null=True)),
                ('min_attribute_id', models.IntegerField(default=None, null=True)),
                ('display_when_zero', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DogmaAttributeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default=None, null=True)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DogmaEffect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disallow_auto_repeat', models.BooleanField()),
                ('discharge_attribute_id', models.IntegerField(default=None, null=True)),
                ('duration_attribute_id', models.IntegerField(default=None, null=True)),
                ('effect_category', models.IntegerField()),
                ('effect_id', models.IntegerField()),
                ('effect_name', models.TextField()),
                ('electronic_chance', models.BooleanField()),
                ('guid', models.TextField(default=None, null=True)),
                ('is_assistance', models.BooleanField()),
                ('is_offensive', models.BooleanField()),
                ('is_warp_safe', models.BooleanField()),
                ('propulsion_chance', models.BooleanField()),
                ('published', models.BooleanField()),
                ('range_chance', models.BooleanField()),
                ('distribution', models.IntegerField(default=None, null=True)),
                ('falloff_attribute_id', models.IntegerField(default=None, null=True)),
                ('range_attribute_id', models.IntegerField(default=None, null=True)),
                ('tracking_speed_attribute_id', models.IntegerField(default=None, null=True)),
                ('description_id', models.JSONField(default=dict, null=True)),
                ('display_name_id', models.JSONField(default=dict, null=True)),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('modifier_info', models.JSONField(default=list, null=True)),
                ('sfx_name', models.TextField(default=None, null=True)),
                ('npc_usage_chance_attribute_id', models.IntegerField(default=None, null=True)),
                ('npc_activation_chance_attribute_id', models.IntegerField(default=None, null=True)),
                ('fitting_usage_chance_attribute_id', models.IntegerField(default=None, null=True)),
                ('resistance_attribute_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corporation_id', models.IntegerField(default=None, null=True)),
                ('description_id', models.JSONField()),
                ('flat_logo', models.TextField(default=None, null=True)),
                ('flat_logo_with_name', models.TextField(default=None, null=True)),
                ('icon_id', models.IntegerField()),
                ('member_races', models.JSONField()),
                ('militia_corporation_id', models.IntegerField(default=None, null=True)),
                ('name_id', models.JSONField()),
                ('short_description_id', models.JSONField(default=dict, null=True)),
                ('size_factor', models.IntegerField()),
                ('solar_system_id', models.IntegerField()),
                ('unique_name', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='GraphicId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default=None, null=True)),
                ('graphic_file', models.TextField(default=None, null=True)),
                ('icon_info', models.JSONField(default=dict, null=True)),
                ('sof_faction_name', models.TextField(default=None, null=True)),
                ('sof_hull_name', models.TextField(default=None, null=True)),
                ('sof_race_name', models.TextField(default=None, null=True)),
                ('sof_layout', models.JSONField(default=list, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anchorable', models.BooleanField()),
                ('anchored', models.BooleanField()),
                ('category_id', models.IntegerField()),
                ('fittable_non_singleton', models.BooleanField()),
                ('name', models.JSONField()),
                ('published', models.BooleanField()),
                ('use_base_price', models.BooleanField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IconId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default=None, null=True)),
                ('icon_file', models.TextField()),
                ('obsolete', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvFlag',
            fields=[
                ('flag_id', models.IntegerField(primary_key=True, serialize=False)),
                ('flag_name', models.TextField()),
                ('flag_text', models.TextField()),
                ('order_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='InvItem',
            fields=[
                ('flag_id', models.IntegerField()),
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('location_id', models.IntegerField()),
                ('owner_id', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('type_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='InvName',
            fields=[
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('item_name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='InvUniqueName',
            fields=[
                ('group_id', models.IntegerField()),
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('item_name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Landmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_id', models.IntegerField()),
                ('landmark_name_id', models.IntegerField()),
                ('position', models.JSONField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('location_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarketGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_id', models.JSONField(default=dict, null=True)),
                ('has_types', models.BooleanField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('name_id', models.JSONField()),
                ('parent_group_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MetaGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.JSONField(default=list, null=True)),
                ('name_id', models.JSONField()),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('icon_suffix', models.TextField(default=None, null=True)),
                ('description_id', models.JSONField(default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Moon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planet_attributes', models.JSONField()),
                ('position', models.JSONField()),
                ('radius', models.IntegerField()),
                ('statistics', models.JSONField(default=dict, null=True)),
                ('type_id', models.IntegerField()),
                ('npc_stations', models.JSONField(default=dict, null=True)),
                ('moon_name_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NpcCorporation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ceo_id', models.IntegerField(default=None, null=True)),
                ('deleted', models.BooleanField()),
                ('description_id', models.JSONField(default=dict, null=True)),
                ('extent', models.TextField()),
                ('has_player_personnel_manager', models.BooleanField()),
                ('initial_price', models.IntegerField()),
                ('member_limit', models.IntegerField()),
                ('min_security', models.IntegerField()),
                ('minimum_join_standing', models.IntegerField()),
                ('name_id', models.JSONField()),
                ('public_shares', models.IntegerField()),
                ('send_char_termination_message', models.BooleanField()),
                ('shares', models.BigIntegerField()),
                ('size', models.TextField()),
                ('station_id', models.IntegerField(default=None, null=True)),
                ('tax_rate', models.FloatField()),
                ('ticker_name', models.TextField()),
                ('unique_name', models.BooleanField()),
                ('allowed_member_races', models.JSONField(default=list, null=True)),
                ('corporation_trades', models.JSONField(default=dict, null=True)),
                ('divisions', models.JSONField(default=dict, null=True)),
                ('enemy_id', models.IntegerField(default=None, null=True)),
                ('faction_id', models.IntegerField(default=None, null=True)),
                ('friend_id', models.IntegerField(default=None, null=True)),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('investors', models.JSONField(default=dict, null=True)),
                ('lp_offer_tables', models.JSONField(default=list, null=True)),
                ('main_activity_id', models.IntegerField(default=None, null=True)),
                ('race_id', models.IntegerField(default=None, null=True)),
                ('size_factor', models.FloatField(default=None, null=True)),
                ('solar_system_id', models.IntegerField(default=None, null=True)),
                ('exchange_rates', models.JSONField(default=dict, null=True)),
                ('secondary_activity_id', models.IntegerField(default=None, null=True)),
                ('url', models.TextField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NpcCorporationDivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default=None, null=True)),
                ('internal_name', models.TextField()),
                ('leader_type_name_id', models.JSONField()),
                ('name_id', models.JSONField()),
                ('description_id', models.JSONField(default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Planet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('celestial_index', models.IntegerField()),
                ('planet_attributes', models.JSONField()),
                ('position', models.JSONField()),
                ('radius', models.IntegerField()),
                ('statistics', models.JSONField()),
                ('type_id', models.IntegerField()),
                ('npc_stations', models.JSONField(default=dict, null=True)),
                ('planet_name_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlanetResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power', models.IntegerField(default=None, null=True)),
                ('workforce', models.IntegerField(default=None, null=True)),
                ('cycle_minutes', models.IntegerField(default=None, null=True)),
                ('harvest_silo_max', models.IntegerField(default=None, null=True)),
                ('maturation_cycle_minutes', models.IntegerField(default=None, null=True)),
                ('maturation_percent', models.IntegerField(default=None, null=True)),
                ('mature_silo_max', models.IntegerField(default=None, null=True)),
                ('reagent_harvest_amount', models.IntegerField(default=None, null=True)),
                ('reagent_type_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlanetSchematic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_time', models.IntegerField()),
                ('name_id', models.JSONField()),
                ('pins', models.JSONField()),
                ('types', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_id', models.JSONField(default=dict, null=True)),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('name_id', models.JSONField()),
                ('ship_type_id', models.IntegerField(default=None, null=True)),
                ('skills', models.JSONField(default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('center', models.JSONField()),
                ('description_id', models.IntegerField(default=None, null=True)),
                ('faction_id', models.IntegerField(default=None, null=True)),
                ('max', models.JSONField()),
                ('min', models.JSONField()),
                ('name_id', models.IntegerField()),
                ('nebula', models.IntegerField()),
                ('region_id', models.IntegerField(primary_key=True, serialize=False)),
                ('wormhole_class_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResearchAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skills', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Skin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_ccpdevs', models.BooleanField()),
                ('internal_name', models.TextField()),
                ('skin_id', models.IntegerField()),
                ('skin_material_id', models.IntegerField()),
                ('types', models.JSONField()),
                ('visible_serenity', models.BooleanField()),
                ('visible_tranquility', models.BooleanField()),
                ('is_structure_skin', models.BooleanField(default=False, null=True)),
                ('skin_description', models.TextField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SkinLicense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.IntegerField()),
                ('license_type_id', models.IntegerField()),
                ('skin_id', models.IntegerField()),
                ('is_single_use', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SkinMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name_id', models.IntegerField()),
                ('material_set_id', models.IntegerField()),
                ('skin_material_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SolarSystem',
            fields=[
                ('border', models.BooleanField()),
                ('center', models.JSONField()),
                ('corridor', models.BooleanField()),
                ('fringe', models.BooleanField()),
                ('hub', models.BooleanField()),
                ('international', models.BooleanField()),
                ('luminosity', models.FloatField()),
                ('max', models.JSONField()),
                ('min', models.JSONField()),
                ('radius', models.FloatField()),
                ('regional', models.BooleanField()),
                ('security', models.FloatField()),
                ('security_class', models.TextField(default=None, null=True)),
                ('solar_system_id', models.IntegerField(primary_key=True, serialize=False)),
                ('solar_system_name_id', models.IntegerField()),
                ('sun_type_id', models.IntegerField(default=None, null=True)),
                ('wormhole_class_id', models.IntegerField(default=None, null=True)),
                ('description_id', models.IntegerField(default=None, null=True)),
                ('visual_effect', models.TextField(default=None, null=True)),
                ('disallowed_anchor_categories', models.JSONField(default=list, null=True)),
                ('disallowed_anchor_groups', models.JSONField(default=list, null=True)),
                ('faction_id', models.IntegerField(default=None, null=True)),
                ('secondary_sun', models.JSONField(default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SovereigntyUpgrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_hourly_upkeep', models.IntegerField(default=None, null=True)),
                ('fuel_startup_cost', models.IntegerField(default=None, null=True)),
                ('fuel_type_id', models.IntegerField(default=None, null=True)),
                ('mutually_exclusive_group', models.TextField()),
                ('power_allocation', models.IntegerField()),
                ('workforce_allocation', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Star',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('radius', models.BigIntegerField()),
                ('statistics', models.JSONField()),
                ('type_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Stargate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destination', models.IntegerField()),
                ('position', models.JSONField()),
                ('type_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='StaStation',
            fields=[
                ('constellation_id', models.IntegerField()),
                ('corporation_id', models.IntegerField()),
                ('docking_cost_per_volume', models.IntegerField()),
                ('max_ship_volume_dockable', models.IntegerField()),
                ('office_rental_cost', models.IntegerField()),
                ('operation_id', models.IntegerField()),
                ('region_id', models.IntegerField()),
                ('reprocessing_efficiency', models.FloatField()),
                ('reprocessing_hangar_flag', models.IntegerField()),
                ('reprocessing_stations_take', models.FloatField()),
                ('security', models.FloatField()),
                ('solar_system_id', models.IntegerField()),
                ('station_id', models.IntegerField(primary_key=True, serialize=False)),
                ('station_name', models.TextField()),
                ('station_type_id', models.IntegerField()),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('z', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='StationOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_id', models.IntegerField()),
                ('border', models.FloatField()),
                ('corridor', models.FloatField()),
                ('description_id', models.JSONField(default=dict, null=True)),
                ('fringe', models.FloatField()),
                ('hub', models.FloatField()),
                ('manufacturing_factor', models.FloatField()),
                ('operation_name_id', models.JSONField()),
                ('ratio', models.FloatField()),
                ('research_factor', models.FloatField()),
                ('services', models.JSONField()),
                ('station_types', models.JSONField(default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StationService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name_id', models.JSONField()),
                ('description_id', models.JSONField(default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TournamentRuleSet',
            fields=[
                ('banned', models.JSONField()),
                ('maximum_pilots_match', models.IntegerField()),
                ('maximum_points_match', models.IntegerField()),
                ('points', models.JSONField()),
                ('rule_set_id', models.TextField(primary_key=True, serialize=False)),
                ('rule_set_name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField()),
                ('mass', models.FloatField(default=None, null=True)),
                ('name', models.JSONField()),
                ('portion_size', models.IntegerField()),
                ('published', models.BooleanField()),
                ('volume', models.FloatField(default=None, null=True)),
                ('radius', models.FloatField(default=None, null=True)),
                ('description', models.JSONField(default=dict, null=True)),
                ('graphic_id', models.IntegerField(default=None, null=True)),
                ('sound_id', models.IntegerField(default=None, null=True)),
                ('icon_id', models.IntegerField(default=None, null=True)),
                ('race_id', models.IntegerField(default=None, null=True)),
                ('sof_faction_name', models.TextField(default=None, null=True)),
                ('base_price', models.FloatField(default=None, null=True)),
                ('market_group_id', models.IntegerField(default=None, null=True)),
                ('capacity', models.FloatField(default=None, null=True)),
                ('meta_group_id', models.IntegerField(default=None, null=True)),
                ('variation_parent_type_id', models.IntegerField(default=None, null=True)),
                ('faction_id', models.IntegerField(default=None, null=True)),
                ('masteries', models.JSONField(default=dict, null=True)),
                ('traits', models.JSONField(default=dict, null=True)),
                ('sof_material_set_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeDogma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dogma_attributes', models.JSONField()),
                ('dogma_effects', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='TypeMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('materials', models.JSONField()),
            ],
        ),
        migrations.AddField(
            model_name='checksum',
            name='last_updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name='InvPosition',
            fields=[
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('pitch', models.IntegerField(default=None, null=True)),
                ('roll', models.IntegerField(default=None, null=True)),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('yaw', models.IntegerField(default=None, null=True)),
                ('z', models.FloatField()),
            ],
            options={
                'indexes': [models.Index(fields=['item_id'], name='sde_invposi_item_id_b49cab_idx')],
            },
        ),
        migrations.CreateModel(
            name='UniverseLookup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', models.IntegerField()),
                ('constellation_id', models.IntegerField()),
                ('solar_system_id', models.IntegerField()),
                ('planet_id', models.IntegerField(null=True)),
                ('moons', models.JSONField(default=list, null=True)),
                ('asteroid_belts', models.JSONField(default=list, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['region_id'], name='sde_univers_region__566e7b_idx'), models.Index(fields=['constellation_id'], name='sde_univers_constel_817805_idx'), models.Index(fields=['solar_system_id'], name='sde_univers_solar_s_1feafa_idx'), models.Index(fields=['planet_id'], name='sde_univers_planet__757ca6_idx'), models.Index(fields=['moons'], name='sde_univers_moons_5e03ba_idx'), models.Index(fields=['asteroid_belts'], name='sde_univers_asteroi_8e3a07_idx')],
                'unique_together': {('region_id', 'constellation_id', 'solar_system_id', 'planet_id')},
            },
        ),
    ]
